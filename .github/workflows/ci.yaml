---
name: ci
on:
  pull_request:
    branches:
      - main
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install DuckDB.
        working-directory: /tmp
        env:
          DUCKDB_VERSION: '1.3.2'
        run: |
          LIBDIR="$HOME/.libduckdb"
          mkdir -p "$LIBDIR"

          curl -sSL \
            "https://github.com/duckdb/duckdb/releases/download/v${DUCKDB_VERSION}/libduckdb-linux-amd64.zip" \
            -o duckdb.zip

          unzip -q duckdb.zip -d "$LIBDIR"

          echo "DUCKDB_LIB_DIR=$LIBDIR"                       >> "$GITHUB_ENV"
          echo "DUCKDB_INCLUDE_DIR=$LIBDIR"                   >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$LIBDIR:${LD_LIBRARY_PATH:-}" >> "$GITHUB_ENV"

      # Uncomment to debug libduckdb linking issues
      # - run: echo "$DUCKDB_LIB_DIR"; echo "$DUCKDB_INCLUDE_DIR"; ls "$DUCKDB_LIB_DIR"

      - run: cargo test --features log,syn,tz --workspace
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install nightly
      - run: rustup component add rustfmt --toolchain nightly
      - run: cargo +nightly fmt -- --check
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo doc --no-deps
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
